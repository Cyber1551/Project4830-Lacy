{"version":3,"sources":["context/UserContext.tsx","components/NavBarComponent.tsx","components/GameComponent/index.js","components/GameComponent/GameComponent.tsx","constants.ts","context/RestClient.ts","components/RegisterComponent/index.js","components/RegisterComponent/RegisterComponent.tsx","components/LoginComponent/index.js","components/LoginComponent/LoginComponent.tsx","context/SocketContext.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Context","React","createContext","user","login","userInp","logout","UserContext","props","useState","contextUser","Provider","value","useUserContext","context","useContext","undefined","Error","NavBarComponent","Menu","SubMenu","className","style","border","onBack","backIcon","PoweroffOutlined","title","GameComponent","useHistory","bordered","Item","label","username","mediumRegex","RegExp","ENDPOINT","Login","password","a","axios","post","response","Promise","resolve","data","Register","RegisterComponent","Form","useForm","form","setSubmitting","setUsername","setPassword","name","onFinish","values","then","result","success","message","error","rules","required","autoComplete","type","onChange","event","target","prefix","UserOutlined","placeholder","validator","rule","test","reject","hasFeedback","Password","LockOutlined","dependencies","getFieldValue","htmlType","marginLeft","to","LoginComponent","submitting","history","initialValues","remember","push","trigger","placement","loading","SocketContext","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1800120b.chunk.js","sourcesContent":["import React, { ReactElement, useContext, useState } from \"react\";\r\nimport { IUser, IUserContext } from \"../constants\";\r\nconst Context = React.createContext<IUserContext>({\r\n  user: null,\r\n  login: (userInp:IUser) => {},\r\n  logout: () => {},\r\n});\r\n\r\nexport const UserContext = (props: { children: ReactElement }) => {\r\n  const [contextUser, setContextUser] = useState<IUserContext>({\r\n    user: null,\r\n    login: (userInp:IUser) => {},\r\n    logout: () => {}\r\n  });\r\n\r\n   \r\n  return <Context.Provider value={contextUser} {...props} />;\r\n};\r\nexport const useUserContext = (): IUserContext => {\r\n  const context = useContext<IUserContext>(Context);\r\n  if (context === undefined) {\r\n    throw new Error(\"Error using UserContext\");\r\n  }\r\n  return context;\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Menu, PageHeader } from \"antd\";\r\nimport {\r\n PoweroffOutlined\r\n} from \"@ant-design/icons\";\r\nimport { useUserContext } from \"../context/UserContext\";\r\nconst { SubMenu } = Menu;\r\n\r\nconst NavBarComponent = () => {\r\n  const [currentMenu, setCurrentMenu] = useState(\"\");\r\n  const context = useUserContext();\r\n  return (\r\n    <PageHeader\r\n      className=\"site-page-header\"\r\n      style={{border: \"0.5px solid lightgray\"}}\r\n      onBack={context.logout}\r\n      backIcon={<PoweroffOutlined />}\r\n      title=\"Dashboard\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default NavBarComponent;\r\n","import GameComponent from './GameComponent';\r\nexport default GameComponent;","import {\r\n    ExclamationOutlined,\r\n    LockOutlined,\r\n    UserOutlined,\r\n  } from \"@ant-design/icons\";\r\n  import {\r\n    Badge,\r\n    Button,\r\n    Checkbox,\r\n    Descriptions,\r\n    Input,\r\n    message,\r\n    Modal,\r\n    Tooltip,\r\n  } from \"antd\";\r\n  import { Form } from \"antd\";\r\n  import FormItem from \"antd/lib/form/FormItem\";\r\n  import FormItemInput from \"antd/lib/form/FormItemInput\";\r\n  import React, { useEffect, useState } from \"react\";\r\n  import { Link, useHistory } from \"react-router-dom\";\r\n  import { useUserContext } from \"../../context/UserContext\";\r\n  import { mediumRegex } from \"../../constants\";\r\n  import NavBarComponent from \"../NavBarComponent\";\r\n  import \"./GameComponent.scss\";\r\n  \r\n  const DashboardComponent = () => {\r\n    const context = useUserContext();\r\n    const history = useHistory();\r\n\r\n    const logout = () => {\r\n      context.logout();\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <NavBarComponent />\r\n  \r\n        <Descriptions title=\"User Info\" bordered>\r\n          <Descriptions.Item label=\"Email\">{context.user?.username}</Descriptions.Item>\r\n        </Descriptions>\r\n      </div>\r\n    );\r\n  };\r\n  export default DashboardComponent;\r\n  ","export const mediumRegex = new RegExp(\"^(((?=.*[a-z])(?=.*[A-Z]))|((?=.*[a-z])(?=.*[0-9]))|((?=.*[A-Z])(?=.*[0-9])))(?=.{6,})\");\r\n\r\nexport interface IUser {\r\n    username: string;\r\n}\r\nexport interface IUserContext {\r\n    user: IUser | null;\r\n    login: (user:IUser) => void;\r\n    logout: () => void;\r\n}\r\n\r\nexport interface ISocketContext {\r\n    login: (username:string, password:string) => Promise<IUser> | null;\r\n}","import axios from \"axios\";\r\nimport { IUser } from \"../constants\";\r\n\r\nconst ENDPOINT = \"http://http://ec2-18-191-134-20.us-east-2.compute.amazonaws.com:5000\";\r\n\r\nexport const Login = async (\r\n  username: string,\r\n  password: string\r\n): Promise<void> => {\r\n  const response = await axios.post(ENDPOINT + \"/login\", {username:username, password:password});\r\n  return Promise.resolve(response.data);\r\n};\r\n\r\nexport const Register = async (\r\n  username: string,\r\n  password: string\r\n): Promise<void> => {\r\n  const response = await axios.post(ENDPOINT + \"/register\", {username:username, password:password});\r\n  return Promise.resolve(response.data);\r\n};\r\n","import RegisterComponent from './RegisterComponent';\r\nexport default RegisterComponent;","import { LockOutlined, MailOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Checkbox, Input, message, Tooltip } from \"antd\";\r\nimport { Form } from \"antd\";\r\nimport FormItem from \"antd/lib/form/FormItem\";\r\nimport React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { mediumRegex } from \"../../constants\";\r\nimport { Register } from \"../../context/RestClient\";\r\nimport \"./RegisterComponent.scss\";\r\n\r\nconst RegisterComponent = () => {\r\n  const [form] = Form.useForm();\r\n  const [submitting, setSubmitting] = useState<boolean>(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const onSubmit = (values: any) => {\r\n    setSubmitting(true);\r\n    Register(username, password).then((result:any) => {\r\n      setSubmitting(false);\r\n      if(result.success)\r\n      {\r\n        message.success(\"You can now sign in!\");\r\n      }\r\n      else \r\n      {\r\n        message.error(\"Username taken\")\r\n      }\r\n    })\r\n  };\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form-wrapper\">\r\n        <Form\r\n          name=\"normal_register\"\r\n          className=\"login-form\"\r\n          form={form}\r\n          onFinish={onSubmit}\r\n        >\r\n          <h1>The Best RPG</h1>\r\n          <h3>Register</h3>\r\n          <FormItem\r\n            name=\"username\"\r\n            rules={[\r\n              { required: true, message: \"Email is Required!\" }\r\n            ]}\r\n          >\r\n            <Input\r\n              autoComplete={\"off\"}\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(event) => setUsername(event.target.value)}\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n            />\r\n          </FormItem>\r\n          <Form.Item\r\n            name=\"password\"\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Password is Required!\",\r\n              },\r\n              {\r\n                validator(rule, value) {\r\n                  if (mediumRegex.test(value)) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\"Passwords doesn't meet Requirements!\");\r\n                },\r\n              },\r\n            ]}\r\n            hasFeedback\r\n          >\r\n            <Input.Password\r\n              value={password}\r\n              onChange={(event) => setPassword(event.target.value)}\r\n              placeholder=\"Password\"\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <Form.Item\r\n            name=\"confirm\"\r\n            dependencies={[\"password\"]}\r\n            hasFeedback\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: \"Please confirm your password!\",\r\n              },\r\n              ({ getFieldValue }) => ({\r\n                validator(rule, value) {\r\n                  if (!value || getFieldValue(\"password\") === value) {\r\n                    return Promise.resolve();\r\n                  }\r\n                  return Promise.reject(\"Passwords must match!\");\r\n                },\r\n              }),\r\n            ]}\r\n          >\r\n            <Input.Password\r\n              placeholder=\"Confirm Password\"\r\n              prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n            />\r\n          </Form.Item>\r\n\r\n          <FormItem>\r\n            <Button\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"submit-form-button\"\r\n            >\r\n              Register\r\n            </Button>\r\n            <span style={{ marginLeft: 10 }}>\r\n              Or <Link to=\"/\">login!</Link>\r\n            </span>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default RegisterComponent;\r\n","import LoginComponent from './LoginComponent';\r\nexport default LoginComponent;","import {\r\n  ExclamationOutlined,\r\n  LockOutlined,\r\n  MailOutlined,\r\n  UserOutlined,\r\n} from \"@ant-design/icons\";\r\nimport { Button, Input, message, Tooltip } from \"antd\";\r\nimport { Form } from \"antd\";\r\nimport FormItem from \"antd/lib/form/FormItem\";\r\nimport FormItemInput from \"antd/lib/form/FormItemInput\";\r\nimport React, { useState } from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { mediumRegex } from \"../../constants\";\r\nimport { Login } from \"../../context/RestClient\";\r\nimport { useSocketContext } from \"../../context/SocketContext\";\r\nimport { useUserContext } from \"../../context/UserContext\";\r\nimport \"./LoginComponent.scss\";\r\n\r\nconst LoginComponent = () => {\r\n  const [form] = Form.useForm();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  const [visible, setVisible] = useState<boolean>(false);\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  const [submitting, setSubmitting] = useState<boolean>(false);\r\n\r\n  const history = useHistory();\r\n  const userContext = useUserContext();\r\n\r\n  const onSubmit = (values: any) => {\r\n    setSubmitting(true);\r\n    Login(username, password).then((result:any) => {\r\n      setSubmitting(false);\r\n      if (result.success)\r\n      {\r\n        message.success(\"Logged In\");\r\n        history.push('/game');\r\n      }\r\n      else {\r\n        message.error(\"Incorrect username or password\");\r\n      }\r\n    })\r\n  };\r\n  const onCancel = () => {\r\n    setVisible(false);\r\n    setLoading(false);\r\n  };\r\n  const onConfirm = () => {\r\n    setLoading(true);\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"wrapper\">\r\n      <div className=\"form-wrapper\">\r\n        <Form\r\n          name=\"normal_login\"\r\n          form={form}\r\n          className=\"login-form\"\r\n          initialValues={{ remember: true }}\r\n          onFinish={onSubmit}\r\n        >\r\n          <h1>The Best RPG</h1>\r\n          <h3>Sign In</h3>\r\n          <FormItem\r\n            hasFeedback\r\n            name=\"username\"\r\n            rules={[\r\n              { required: true, message: \"Username is Required!\" }\r\n            ]}\r\n          >\r\n            <Input\r\n              autoComplete={\"off\"}\r\n              type=\"text\"\r\n              value={username}\r\n              onChange={(event) => setUsername(event.target.value)}\r\n              prefix={<UserOutlined className=\"site-form-item-icon\" />}\r\n              placeholder=\"Username\"\r\n            />\r\n          </FormItem>\r\n          <Tooltip trigger={[\"focus\"]} title={\"Coming Soon\"} placement=\"right\">\r\n            <Form.Item\r\n              hasFeedback\r\n              name=\"password\"\r\n              rules={[\r\n                {\r\n                  required: true,\r\n                  message: \"Password is Required!\",\r\n                },\r\n              ]}\r\n            >\r\n              <Input.Password\r\n                value={password}\r\n                onChange={(event) => setPassword(event.target.value)}\r\n                placeholder=\"Password\"\r\n                prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n              />\r\n            </Form.Item>\r\n          </Tooltip>\r\n          <FormItem>\r\n            <Button\r\n              loading={submitting}\r\n              type=\"primary\"\r\n              htmlType=\"submit\"\r\n              className=\"login-form-button\"\r\n            >\r\n              Log in\r\n            </Button>\r\n            <span style={{ marginLeft: 10 }}>\r\n              Or <Link to=\"register\">register now!</Link>\r\n            </span>\r\n          </FormItem>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default LoginComponent;\r\n","import { Socket } from \"dgram\";\r\nimport React, { ReactElement, useContext, useEffect, useState } from \"react\";\r\nimport { ISocketContext, IUser } from \"../constants\";\r\nimport io from \"socket.io-client\";\r\n\r\nconst Context = React.createContext<ISocketContext>({\r\n  login: (username: string, password: string) => null,\r\n});\r\n\r\nexport const SocketContext = (props: { children: ReactElement }) => {\r\n  /* const ENDPOINT = \"localhost:5000\";\r\n  let socket: SocketIOClient.Socket;\r\n  useEffect(() => {\r\n    socket = io(ENDPOINT);\r\n    socket.on(\"loginReturn\", (result: IUser) => {\r\n\r\n    });\r\n  }, [ENDPOINT]);\r\n\r\n  const login = (username: string, password: string):Promise<IUser => {\r\n    socket.emit(\"login\", { username, password });\r\n  };\r\n*/\r\n  return <Context.Provider value={{ login: () => null }} {...props} />;\r\n};\r\nexport const useSocketContext = () => {\r\n  const context = useContext(Context);\r\n  if (context === undefined) {\r\n    throw new Error(\"Error using SocketContext\");\r\n  }\r\n  return context;\r\n};\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport GameComponent from \"./components/GameComponent\";\nimport RegisterComponent from \"./components/RegisterComponent\";\nimport LoginComponent from \"./components/LoginComponent\";\nimport { UserContext } from \"./context/UserContext\";\nimport { SocketContext } from \"./context/SocketContext\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <UserContext>\n        <SocketContext>\n          <Router>\n            <Route path=\"/\" exact component={LoginComponent} />\n            <Route path=\"/register\" component={RegisterComponent} />\n            <Route path=\"/game\" exact component={GameComponent} />\n          </Router>\n        </SocketContext>\n      </UserContext>\n    </div>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}